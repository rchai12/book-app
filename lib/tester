import 'package:flutter/material.dart';
import 'book.dart';
import 'authentication.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'book_details.dart';

class ReviewDialogs extends StatefulWidget {
  final Book book;
  final User user;
  final AuthService authService;

  const ReviewDialogs({
    super.key,
    required this.book,
    required this.user,
    required this.authService,
  });

  @override
  State<ReviewDialogs> createState() => _ReviewDialogsState();
}

class _ReviewDialogsState extends State<ReviewDialogs> {
  int _userRating = 0;
  String _userReview = '';
  final _reviewController = TextEditingController();

  void _checkBookReview() async {
    try {
      print('Checking if has review');
      final reviewData = await widget.authService.getBookReview(widget.book.id);
      if (reviewData != null) {
        setState(() {
          _userRating = reviewData['rating'];
          _userReview = reviewData['review'];
          widget.book.rating = _userRating;
          widget.book.review = _userReview;
          print('Review: ${_userReview}');
          print ('Rating: ${_userRating}');
        });
      }
    } catch (e) {
      print('Error checking book review: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Failed to retrieve review. Please try again later.'),
          duration: Duration(seconds: 2),
        ),
      );
    }
  }

  void _submitReview() async {
    try {
      await widget.authService.addBookToReviews(widget.book, _userRating, _userReview,);
      setState(() {
        widget.book.review = _userReview;
        widget.book.rating = _userRating;
      });
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Review added successfully!'),
          duration: Duration(seconds: 1),
        ),
      );
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text('Failed to submit review. Please try again.'),
          duration: Duration(seconds: 2),
        ),
      );
    }
  }

  Widget _buildRatingStars() {
    return Row(
      mainAxisAlignment: MainAxisAlignment.start,
      children: List.generate(5, (index) {
        return IconButton(
          icon: Icon(
            index < _userRating ? Icons.star : Icons.star_border,
            color: Colors.amber,
          ),
          onPressed: () {
            setState(() {
              _userRating = index + 1;
            });
          },
        );
      }),
    );
  }

  // Method to show a dialog to edit already made reviews
  static void editReviewDialog(BuildContext context, {required Book review}) {
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text("Edit Review"),
          content: Column(
            spacing: 5.0,
            children: [
              Text(
                "Past Review:",
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              Text(
                "Enter new Review:",
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              _buildRatingStars(),
              TextField(
                controller: _reviewController,
                decoration: InputDecoration(
                  hintText: 'Write your review here...',
                  border: OutlineInputBorder(),
                ),
                maxLines: 5,
                onChanged: (value) {
                  setState(() {
                    _userReview = value;
                  });
                },
              ),
            ],
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
              },
              child: Text('Cancel'),
            ),
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
                _submitReview();
              },
              child: Text('Submit'),
            ),
          ],
        );
      },
    );
  }
}
